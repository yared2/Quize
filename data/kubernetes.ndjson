{"id":1,"question":"Which object provides stable networking to a set of Pods?","options":{"a":"Deployment","b":"ReplicaSet","c":"Service","d":"ConfigMap"},"answer":"c","explanation":"Service exposes pods via a stable virtual IP/DNS."}
{"id":2,"question":"Which Kubernetes object ensures the desired number of Pod replicas are running?","options":{"a":"Service","b":"Deployment","c":"ConfigMap","d":"Ingress"},"answer":"b","explanation":"A Deployment manages ReplicaSets and ensures the specified number of Pod replicas are running."}
{"id":3,"question":"What is the role of a ConfigMap in Kubernetes?","options":{"a":"Stores secret credentials","b":"Provides external configuration to Pods","c":"Defines Pod scaling rules","d":"Manages rolling updates"},"answer":"b","explanation":"ConfigMaps provide external configuration as key-value pairs that Pods can consume without rebuilding images."}
{"id":4,"question":"Which object is used for storing sensitive information like passwords and API keys?","options":{"a":"ConfigMap","b":"Secret","c":"StatefulSet","d":"Volume"},"answer":"b","explanation":"Secrets store sensitive data in base64-encoded form and can be mounted as environment variables or volumes."}
{"id":5,"question":"Which Kubernetes component is responsible for scheduling Pods to nodes?","options":{"a":"kubelet","b":"kube-scheduler","c":"kube-proxy","d":"etcd"},"answer":"b","explanation":"The kube-scheduler assigns Pods to nodes based on resource requirements and scheduling policies."}
{"id":6,"question":"What is the purpose of a StatefulSet?","options":{"a":"Provides immutable Pods","b":"Manages Pods with stable identity and storage","c":"Handles load balancing","d":"Stores cluster-wide configs"},"answer":"b","explanation":"StatefulSets are used for workloads that need stable network identity and persistent storage (e.g., databases)."}
{"id":7,"question":"Which Kubernetes object exposes HTTP/HTTPS routes from outside the cluster to services?","options":{"a":"ConfigMap","b":"Ingress","c":"DaemonSet","d":"ReplicaSet"},"answer":"b","explanation":"Ingress manages external HTTP/HTTPS access and routing rules to Services inside the cluster."}
{"id":8,"question":"What is the role of kube-proxy in Kubernetes?","options":{"a":"Maintains node logs","b":"Implements network rules for Services","c":"Schedules Pods","d":"Manages Secrets"},"answer":"b","explanation":"kube-proxy runs on nodes to maintain network rules and route traffic to the correct Pod endpoints for Services."}
{"id":9,"question":"Which component stores cluster data persistently in Kubernetes?","options":{"a":"kube-apiserver","b":"etcd","c":"kube-scheduler","d":"controller-manager"},"answer":"b","explanation":"etcd is a distributed key-value store that persistently stores all cluster data."}
{"id":10,"question":"What is the main difference between a DaemonSet and a Deployment?","options":{"a":"DaemonSet runs on all nodes, Deployment manages replicas across selected nodes","b":"Deployment always mounts volumes, DaemonSet does not","c":"DaemonSet is for scaling horizontally, Deployment is not","d":"Deployment can only run system-level Pods"},"answer":"a","explanation":"DaemonSets ensure a Pod runs on every (or selected) node, while Deployments scale Pods based on replica count."}
{"id":11,"question":"Which API server component validates and processes requests in Kubernetes?","options":{"a":"kube-scheduler","b":"kube-apiserver","c":"etcd","d":"controller-manager"},"answer":"b","explanation":"The kube-apiserver exposes the Kubernetes API, validates requests, and processes them."}
{"id":12,"question":"What is the purpose of a ReplicaSet in Kubernetes?","options":{"a":"Exposes services externally","b":"Ensures a specified number of identical Pods are running","c":"Stores persistent data","d":"Provides secrets management"},"answer":"b","explanation":"ReplicaSet ensures a set number of identical Pods are always running, replacing failed ones."}
{"id":13,"question":"Which resource is used to define resource limits and requests for Pods?","options":{"a":"ConfigMap","b":"ResourceQuota","c":"LimitRange","d":"PodSpec"},"answer":"d","explanation":"Resource requests and limits are defined inside the PodSpec for each container."}
{"id":14,"question":"Which Kubernetes object is commonly used for zero-downtime updates?","options":{"a":"Deployment","b":"ReplicaSet","c":"StatefulSet","d":"Job"},"answer":"a","explanation":"Deployments support rolling updates, ensuring zero downtime during Pod replacement."}
{"id":15,"question":"What is the purpose of a Job in Kubernetes?","options":{"a":"Runs Pods indefinitely","b":"Runs Pods to completion for batch tasks","c":"Ensures Pods restart on failure","d":"Provides external load balancing"},"answer":"b","explanation":"Jobs run Pods until completion, commonly used for batch or finite workloads."}
{"id":16,"question":"What is the function of a CronJob in Kubernetes?","options":{"a":"Runs jobs on a time-based schedule","b":"Scales Deployments automatically","c":"Maintains Pod networking","d":"Provides config injection"},"answer":"a","explanation":"CronJobs schedule Jobs to run at specific times or intervals, similar to Linux cron."}
{"id":17,"question":"What type of Service provides external access using a cloud provider’s load balancer?","options":{"a":"ClusterIP","b":"NodePort","c":"LoadBalancer","d":"ExternalName"},"answer":"c","explanation":"The LoadBalancer service type provisions an external load balancer through the cloud provider."}
{"id":18,"question":"Which Service type exposes a Pod on each node’s IP at a static port?","options":{"a":"ClusterIP","b":"NodePort","c":"LoadBalancer","d":"Headless"},"answer":"b","explanation":"NodePort exposes Pods on each node’s IP at a specific port, accessible externally."}
{"id":19,"question":"Which Kubernetes controller manages network policies between Pods?","options":{"a":"kube-scheduler","b":"kube-proxy","c":"CNI plugin","d":"controller-manager"},"answer":"c","explanation":"The Container Network Interface (CNI) plugin enforces network policies and pod-to-pod communication rules."}
{"id":20,"question":"What is the difference between ClusterIP and ExternalName Service types?","options":{"a":"ClusterIP routes inside cluster, ExternalName maps to external DNS","b":"ClusterIP maps DNS, ExternalName exposes on each node","c":"ClusterIP provides load balancer, ExternalName does not","d":"ClusterIP handles HTTP only, ExternalName handles TCP"},"answer":"a","explanation":"ClusterIP exposes services internally, while ExternalName maps a service to an external DNS name."}
{"id":21,"question":"Which Kubernetes resource is responsible for horizontal scaling of Pods based on CPU or memory usage?","options":{"a":"Deployment","b":"ReplicaSet","c":"HorizontalPodAutoscaler","d":"LimitRange"},"answer":"c","explanation":"HorizontalPodAutoscaler adjusts the number of Pod replicas automatically based on resource metrics."}
{"id":22,"question":"What is the function of the kubelet on a node?","options":{"a":"Schedules Pods","b":"Maintains Pod lifecycle and communicates with the API server","c":"Provides cluster DNS","d":"Stores secrets"},"answer":"b","explanation":"The kubelet runs on each node, ensuring containers are running as specified in PodSpecs and reporting status back to the API server."}
{"id":23,"question":"Which component is the brain of the Kubernetes control plane?","options":{"a":"kube-proxy","b":"kube-apiserver","c":"controller-manager","d":"etcd"},"answer":"b","explanation":"The kube-apiserver acts as the central hub for all API requests and coordination in the control plane."}
{"id":24,"question":"What is the role of the controller-manager in Kubernetes?","options":{"a":"Maintains etcd data","b":"Runs core controllers that regulate the cluster state","c":"Provides DNS resolution","d":"Schedules Pods"},"answer":"b","explanation":"The controller-manager runs controllers such as Node, Job, and Replication controllers to maintain desired state."}
{"id":25,"question":"Which Kubernetes object is used to provide persistent storage to Pods?","options":{"a":"Volume","b":"ConfigMap","c":"Secret","d":"ReplicaSet"},"answer":"a","explanation":"Volumes allow Pods to persist data beyond container lifecycle, using different backends like hostPath, NFS, or cloud storage."}
{"id":26,"question":"What is the main advantage of PersistentVolumeClaims (PVC)?","options":{"a":"They define Pod replicas","b":"They request storage dynamically without exposing backend details","c":"They replace ConfigMaps","d":"They expose services"},"answer":"b","explanation":"PVCs let Pods request storage without worrying about implementation details, decoupling apps from storage provisioning."}
{"id":27,"question":"Which object ensures a Pod runs on every node in the cluster?","options":{"a":"Deployment","b":"DaemonSet","c":"Job","d":"Ingress"},"answer":"b","explanation":"DaemonSets ensure a Pod copy runs on every (or selected) node, often used for monitoring or logging agents."}
{"id":28,"question":"What is the default Service type in Kubernetes?","options":{"a":"ClusterIP","b":"NodePort","c":"LoadBalancer","d":"ExternalName"},"answer":"a","explanation":"ClusterIP is the default Service type, providing internal-only access within the cluster."}
{"id":29,"question":"Which feature enables blue-green or canary deployments in Kubernetes?","options":{"a":"ReplicaSet","b":"Deployment","c":"Service","d":"ConfigMap"},"answer":"b","explanation":"Deployments support strategies like rolling updates, blue-green, and canary deployments to release new versions gradually."}
{"id":30,"question":"What is a Kubernetes namespace primarily used for?","options":{"a":"Scaling Pods","b":"Network routing","c":"Logical partitioning of resources","d":"Persistent storage"},"answer":"c","explanation":"Namespaces logically partition cluster resources, enabling isolation, resource quotas, and multi-tenancy."}
{"id":31,"question":"Which Kubernetes object allows grouping of multiple containers that share storage and networking?","options":{"a":"Service","b":"Pod","c":"Deployment","d":"Namespace"},"answer":"b","explanation":"A Pod is the smallest deployable unit in Kubernetes and can contain one or more containers that share storage, network, and lifecycle."}
{"id":32,"question":"What is the role of kube-dns or CoreDNS in Kubernetes?","options":{"a":"Provides pod autoscaling","b":"Resolves service names to cluster IPs","c":"Handles container runtime","d":"Stores secrets"},"answer":"b","explanation":"CoreDNS provides DNS-based service discovery, allowing Pods to find Services by name."}
{"id":33,"question":"Which Service type creates DNS entries without a cluster IP?","options":{"a":"ClusterIP","b":"NodePort","c":"Headless","d":"LoadBalancer"},"answer":"c","explanation":"Headless Services (with clusterIP=None) allow DNS resolution directly to Pod IPs without load-balancing."}
{"id":34,"question":"What is the function of a ResourceQuota in Kubernetes?","options":{"a":"Limits API requests","b":"Restricts resource usage per namespace","c":"Scales Pods automatically","d":"Ensures Pods restart"},"answer":"b","explanation":"ResourceQuota sets limits on resources like CPU, memory, and number of objects in a namespace."}
{"id":35,"question":"Which object lets you apply default CPU/memory limits for Pods in a namespace?","options":{"a":"LimitRange","b":"ResourceQuota","c":"Deployment","d":"ReplicaSet"},"answer":"a","explanation":"LimitRange enforces default resource requests/limits for Pods in a namespace."}
{"id":36,"question":"Which Kubernetes tool provides a dashboard UI for cluster management?","options":{"a":"kubectl","b":"Lens","c":"Kubelet","d":"controller-manager"},"answer":"b","explanation":"Lens and the official Kubernetes Dashboard are popular tools for visual cluster management."}
{"id":37,"question":"What is the main purpose of a Sidecar container in a Pod?","options":{"a":"Provides monitoring, logging, or proxy alongside main app","b":"Scales Pods horizontally","c":"Stores secrets","d":"Schedules jobs"},"answer":"a","explanation":"Sidecars enhance the main application container with extra functionality like logging, monitoring, or proxying."}
{"id":38,"question":"Which Kubernetes command is used to view cluster nodes?","options":{"a":"kubectl get pods","b":"kubectl get services","c":"kubectl get nodes","d":"kubectl describe cluster"},"answer":"c","explanation":"kubectl get nodes lists all worker and master nodes in the cluster."}
{"id":39,"question":"What does the kube-controller-manager run?","options":{"a":"API server requests","b":"Core controllers like Node, Job, and Replication","c":"Pod networking","d":"Container runtime"},"answer":"b","explanation":"The kube-controller-manager runs multiple controllers that continuously reconcile cluster state with desired state."}
{"id":40,"question":"Which YAML field in a PodSpec defines which container image to use?","options":{"a":"image","b":"selector","c":"template","d":"volume"},"answer":"a","explanation":"The 'image' field specifies which container image should be pulled and run inside the Pod."}
{"id":41,"question":"What is the default namespace in Kubernetes?","options":{"a":"system","b":"default","c":"kube-public","d":"kube-system"},"answer":"b","explanation":"Every cluster has a 'default' namespace where objects are created if no namespace is specified."}
{"id":42,"question":"Which Kubernetes object defines network rules that control traffic between Pods?","options":{"a":"NetworkPolicy","b":"Ingress","c":"Service","d":"ConfigMap"},"answer":"a","explanation":"NetworkPolicies define how Pods can communicate with each other and with external endpoints."}
{"id":43,"question":"What happens when a Pod crashes and has a restartPolicy of Always?","options":{"a":"It stays terminated","b":"The kubelet restarts the Pod","c":"The API server deletes the Pod","d":"The Deployment scales it down"},"answer":"b","explanation":"With restartPolicy=Always, the kubelet restarts the Pod when it crashes."}
{"id":44,"question":"Which component ensures kube-proxy routing rules remain updated?","options":{"a":"kubelet","b":"controller-manager","c":"etcd","d":"kube-apiserver"},"answer":"b","explanation":"The controller-manager updates Service endpoints, which kube-proxy uses for routing traffic."}
{"id":45,"question":"Which Kubernetes logging approach is recommended?","options":{"a":"Writing to container local files","b":"Streaming logs to stdout/stderr","c":"Storing logs in ConfigMaps","d":"Using Pod annotations"},"answer":"b","explanation":"Containers should log to stdout/stderr, which Kubernetes collects and integrates with logging solutions."}
{"id":46,"question":"Which object would you use for long-running, stateful workloads like databases?","options":{"a":"Job","b":"DaemonSet","c":"StatefulSet","d":"Deployment"},"answer":"c","explanation":"StatefulSets are designed for workloads that need stable identity and storage, such as databases."}
{"id":47,"question":"Which kubectl command is used to scale a Deployment?","options":{"a":"kubectl scale deployment <name> --replicas=N","b":"kubectl update pods --count=N","c":"kubectl set replicas <name> N","d":"kubectl resize deployment"},"answer":"a","explanation":"kubectl scale deployment <name> --replicas=N is used to change the number of replicas."}
{"id":48,"question":"What is the main purpose of kube-proxy?","options":{"a":"Pod lifecycle management","b":"API request validation","c":"Implements Service networking rules","d":"Stores cluster config"},"answer":"c","explanation":"kube-proxy maintains network rules that route traffic to appropriate Pod endpoints for Services."}
{"id":49,"question":"Which add-on provides metrics for autoscaling and monitoring?","options":{"a":"CoreDNS","b":"Heapster/metrics-server","c":"kubectl","d":"Ingress"},"answer":"b","explanation":"Metrics-server (formerly Heapster) collects resource usage metrics for autoscaling and monitoring."}
{"id":50,"question":"What is the function of a Pod template in a Deployment?","options":{"a":"Defines the Service IP","b":"Defines the desired Pod specification","c":"Defines cluster storage","d":"Defines logging settings"},"answer":"b","explanation":"The Pod template in a Deployment specifies the Pod configuration that ReplicaSets will manage."}
{"id":51,"question":"Which Kubernetes command describes details of a Pod?","options":{"a":"kubectl logs <pod>","b":"kubectl describe pod <pod>","c":"kubectl get pod <pod>","d":"kubectl explain pod"},"answer":"b","explanation":"kubectl describe pod <pod> shows detailed information including events, status, and configuration."}
{"id":52,"question":"What is the function of a Liveness Probe in Kubernetes?","options":{"a":"Checks if the container is ready for traffic","b":"Checks if the container should be restarted","c":"Scales Pods horizontally","d":"Validates API server health"},"answer":"b","explanation":"Liveness probes detect when a container is unhealthy and trigger a restart."}
{"id":53,"question":"What is the function of a Readiness Probe in Kubernetes?","options":{"a":"Checks if the container is ready to serve traffic","b":"Ensures container is restarted on failure","c":"Stores persistent data","d":"Scales Pods"},"answer":"a","explanation":"Readiness probes indicate if a Pod is ready to accept traffic; if not, it is removed from Service endpoints."}
{"id":54,"question":"Which Kubernetes component enforces pod scheduling policies like taints and tolerations?","options":{"a":"kube-apiserver","b":"kube-scheduler","c":"etcd","d":"controller-manager"},"answer":"b","explanation":"The kube-scheduler assigns Pods to nodes based on policies such as taints and tolerations."}
{"id":55,"question":"What is the difference between Taints and Tolerations?","options":{"a":"Taints block nodes, Tolerations allow specific Pods to run there","b":"Taints allow Pods, Tolerations block nodes","c":"Both control container resource limits","d":"Both define Services"},"answer":"a","explanation":"Taints prevent Pods from running on nodes unless they have matching tolerations."}
{"id":56,"question":"Which field in a Deployment spec defines how updates are rolled out?","options":{"a":"strategy","b":"selector","c":"template","d":"policy"},"answer":"a","explanation":"The 'strategy' field defines rollout policies such as RollingUpdate or Recreate."}
{"id":57,"question":"Which Kubernetes tool provides CLI-based cluster management?","options":{"a":"kubectl","b":"kubelet","c":"etcdctl","d":"Lens"},"answer":"a","explanation":"kubectl is the primary CLI tool for interacting with Kubernetes clusters."}
{"id":58,"question":"Which add-on enables distributed tracing in Kubernetes?","options":{"a":"Prometheus","b":"Jaeger","c":"CoreDNS","d":"Heapster"},"answer":"b","explanation":"Jaeger and Zipkin are commonly used for distributed tracing in Kubernetes environments."}
{"id":59,"question":"Which feature of Kubernetes allows resource isolation between tenants?","options":{"a":"Pods","b":"Namespaces","c":"Deployments","d":"ReplicaSets"},"answer":"b","explanation":"Namespaces provide logical isolation of resources, useful for multi-tenancy and access control."}
{"id":60,"question":"What is the purpose of a PodDisruptionBudget (PDB)?","options":{"a":"Ensures secrets are protected","b":"Limits voluntary disruptions to maintain availability","c":"Scales Pods automatically","d":"Provides external networking"},"answer":"b","explanation":"PDBs define how many Pods can be disrupted during voluntary events like node maintenance to maintain availability."}
